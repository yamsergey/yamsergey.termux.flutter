name: build

on:
  workflow_dispatch:
jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: install deps
      run: sudo apt update && sudo apt install libfreetype-dev ninja-build -y

    - name: setup depot-tools
      uses: newkdev/setup-depot-tools@v1.0.1

    - name: install python requirements
      run: pip install -r requirements.txt

    - name: debug - check if termux BUILD.gn exists before build
      run: |
        echo "=== Checking if termux BUILD.gn exists before build ==="
        if [ -f "flutter/engine/src/build/config/termux/BUILD.gn" ]; then
          echo "termux BUILD.gn EXISTS before build"
          echo "=== Content before build ==="
          cat flutter/engine/src/build/config/termux/BUILD.gn
        else
          echo "termux BUILD.gn does NOT exist before build"
        fi

    - name: fix termux BUILD.gn if needed
      run: |
        echo "=== Checking if termux BUILD.gn needs fixing ==="
        if [ -f "flutter/engine/src/build/config/termux/BUILD.gn" ]; then
          LAST_CHAR=$(tail -c 1 flutter/engine/src/build/config/termux/BUILD.gn)
          SECOND_LAST_CHAR=$(tail -c 2 flutter/engine/src/build/config/termux/BUILD.gn | head -c 1)
          echo "Last char: '$LAST_CHAR' (hex: $(printf '%02x' "'$LAST_CHAR'"))"
          echo "Second last char: '$SECOND_LAST_CHAR' (hex: $(printf '%02x' "'$SECOND_LAST_CHAR'"))"
          
          # Check if file ends with "}\n" but should end with "}\n}\n"
          if [[ "$SECOND_LAST_CHAR" == "}" && "$LAST_CHAR" == $'\n' ]]; then
            echo "=== FIXING: Adding missing closing brace for config('sdk') ==="
            echo "}" >> flutter/engine/src/build/config/termux/BUILD.gn
            echo "Fixed! BUILD.gn now has proper closing braces."
          else
            echo "BUILD.gn appears to have correct format already."
          fi
        fi

    - name: build
      run: python build.py

    - name: debug - check termux BUILD.gn after build failure
      if: failure()
      run: |
        echo "=== Checking termux BUILD.gn after build failure ==="
        if [ -f "flutter/engine/src/build/config/termux/BUILD.gn" ]; then
          echo "=== termux BUILD.gn content after patch ==="
          cat flutter/engine/src/build/config/termux/BUILD.gn
          echo ""
          echo "=== Line count ==="
          wc -l flutter/engine/src/build/config/termux/BUILD.gn
          echo ""
          echo "=== Last 10 lines with line numbers ==="
          tail -10 flutter/engine/src/build/config/termux/BUILD.gn | cat -n
          echo ""
          echo "=== Hex dump of last 50 bytes ==="
          tail -c 50 flutter/engine/src/build/config/termux/BUILD.gn | hexdump -C
        else
          echo "termux BUILD.gn still does NOT exist after build failure"
        fi

    - name: parse tag
      id: parser
      run: |
        TAG=$(NO_RECORD=1 python build.py tag)
        echo "TAG=$TAG" >> $GITHUB_OUTPUT
        echo "TITLE=Flutter $TAG" >> $GITHUB_OUTPUT

    - name: release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.parser.outputs.TAG }}
        name: ${{ steps.parse_toml.outputs.TITLE }}
        files: '**/*.deb'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
